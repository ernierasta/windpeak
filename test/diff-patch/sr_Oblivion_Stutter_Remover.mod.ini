Master = {
	_comment = You can turn on or off each distinct feature from here.
	bManageFPS = 1
	bHookCriticalSections = 1
	bHookHashtables = 1
	bReplaceHeap = 1
	bReplaceGetTickCount = 1
	bLogToConsole = 0
	bFastExit = 1
	bExtraProfiling = 0
	bFlushLog = 1
	iSchedulingResolution = 1
	bReplaceRandom = 1
	bExperimentalStuff = 0
	iMainHookPoint = 1
}
Experimental = {
	_comment =bReduceSleep and iThreadsFixedToCPUs can probably reasonably be used at 1.  > 1 is a bad idea atm.
	_comment =other settings here you're probably better off not touching
	bReduceSleep = 0
	iThreadsFixedToCPUs = 1
	bSuppressRandomSeeding = 0
	bMonitorBSShaderAccumulator = 0
	iPrintSceneGraphDepth = 0
	bReplaceRandomWrappers = 1
	bBenchmarkHeap = 0
	bAlternateHeapHooks = 0
	iHeapMainBlockAddress = 0
}
FPS_Management = {
	_comment =Absent a good reason otherwise, bInject_iFPSClamp=1, fMaximumFPS= 30 to 85 (or 0), fMinimumFPS= 10 to 20, iFPS_Report_Period = 2000 to 60000, fExtraSleepPercent = 0.0 to 0.2
	bInject_iFPSClamp = 1
	fMaximumFPS = 45 
	fMinimumFPS = 10
	iFPS_Report_Period = 15000
	fExtraSleepPercent = 0.1
}
GetTickCount = {
	_comment =This section is disabled by default - see Master/bReplaceGetTickCount
	bForceResolution = 1
	bPreserveDC_Bias = 1
	bPreserveHighFreqComponents = 0
	bForceSync = 0
	iSyncLimitMilliseconds = 50
}
CriticalSections = {
	_comment = CS stuff helps Oblivion, Fallout, and New Vegas significantly
	_comment = much of the benefit comes from the Renderer+0x180 suppression (see overrides below)
	_comment = modes: 1=vanilla, 2=fair, 3=staggering(hybrid of 1 & 2), 5=suppressed
	bUseOverrides = 1
	iDefaultMode = 3
	iDefaultSpin = 1000
	iStaggerLevel = 5
	bEnableMessages = 1
	bEnableProfiling = 0
}
Heap = {
	_comment =This section is disabled by default - see Master/bReplaceHeap
	_comment =I recommend enabling it however.  
	_comment = Heap replacement can produce MAJOR improvements in performance on Oblivion at a significant cost in stability
	_comment = It crashes instantly on Fallout3 last I remember checking
	_comment = It seems to work on Fallout: New Vegas ?
	_comment = Algorithms: 1=FastMM4, 2=Microsoft (slow on XP), 3=SimpleHeap1, 4=TBBMalloc, 5=ThreadHeap2, 6=ThreadHeap3, 8=tcmalloc
	_comment = Algorithms numbers 1, 4, and 8 require external DLL files in the Data/OBSE/Plugins/ComponentDLLs folder
	_comment = Size is in units of megabytes, and only effects algorithms 3, 5, and 6 (other algorithms dynamically determine their own size)
	iHeapAlgorithm = 6
	bEnableProfiling = 0
	iHeapSize = 768
	bEnableMessages = 0
	bZeroAllocations = 0
}
Hashtables = {
	bUseOverrides = 1
	bEnableMessages = 0
	bEnableExtraMessages = 0
	bEnableProfiling = 0
}
OverrideList = {
	CriticalSection = {
		CallerAddress = 0x701748
		comment = Renderer+0x180, recommendation=suppress (mode 5)
		Mode = 5
	}
	CriticalSection = {
		ObjectAddress = 0xB32B80
		comment = MemoryHeap CS, recommendation=stagger (mode 3)
		Mode = 3
		Spin = 1500
	}
	CriticalSection = {
		CallerAddress = 0x70172A
		comment = Renderer+0x80, recommendation= modes 2(for stability) or 5(for performance)
		Mode = 2
	}
	CriticalSection = {
		ObjectAddress = 0xB3FA00
		comment = Unknown4, recommendation=stagger (mode 3)
		Mode = 3
	}
	CriticalSection = {
		ObjectAddress = 0xB33800
		comment = BaseExtraList, recommendation=stagger (mode 3)
		Mode = 3
	}
	CriticalSection = {
		ObjectAddress = 0xB3F600
		comment = recommendation=stagger (mode 3)
		Mode = 3
	}
	CriticalSection = {
		ObjectAddress = 0xB3FC00
		comment =
		Mode = 2
	}
	CriticalSection = {
		ObjectAddress = 0xB39C00
		comment =
		Mode = 2
	}
	Hashtable = {
		comment =caller 0x00418E16
		SizeAddress = 0x00418DDB
		OldSize = 37
		NewSize = 149
	}
	Hashtable = {
		comment =caller 0x0045a8a1
		SizeAddress = 0x0045A866
		OldSize = 5039
		NewSize = 133123
	}
	Hashtable = {
		comment =caller 0x004A25BC
		SizeAddress = 0x004A2586
		OldSize = 523
		NewSize = 2711
	}
	Hashtable = {
		comment =multipart 1/2 - caller 0x004e614f
		SizeAddress = 0x004E610F
		OldSize = 37
		NewSize = 47
	}
	Hashtable = {
		comment =multipart 2/2 - caller 0x004e614f
		SizeAddress = 0x004E612C
		OldSize = 37
		NewSize = 47
	}
	Hashtable = {
		comment =caller 0x004E9014
		SizeAddress = 0x004E8FD7
		OldSize = 37
		NewSize = 739
	}
	Hashtable = {
		comment =caller 0x004f0e20
		SizeAddress = 0x004F1B44
		OldSize = 37
		NewSize = 127
		WordBits = 8
	}
	Hashtable = {
		comment =caller 0x004f1d60
		SizeAddress = 0x004F220A
		OldSize = 7001
		NewSize = 7001
	}
	Hashtable = {
		comment =also caller 0x004f1d60
		SizeAddress = 0x004F222E
		OldSize = 701
		NewSize = 901
	}
	Hashtable = {
		comment =also caller 0x004f1d60
		SizeAddress = 0x004F2B70
		OldSize = 37
		NewSize = 127
		WordBits = 8
	}
	Hashtable = {
		comment =multipart 1/2 - caller 0x004F2ACB
		SizeAddress = 0x004F2A8B
		OldSize = 37
		NewSize = 713
	}
	Hashtable = {
		comment =multipart 2/2 - caller 0x004F2ACB
		SizeAddress = 0x004F2AA8
		OldSize = 37
		NewSize = 713
	}
	Hashtable = {
		comment =multipart 1/2 - caller 0x004f2b3e
		SizeAddress = 0x004F2AEF
		OldSize = 37
		NewSize = 1301
	}
	Hashtable = {
		comment =multipart 2/2 - caller 0x004f2b3e
		SizeAddress = 0x004F2B12
		OldSize = 37
		NewSize = 1301
	}
	Hashtable = {
		comment =caller 0x0067fbb0
		SizeAddress = 0x006C5396
		OldSize = 37
		NewSize = 83
	}
	Hashtable = {
		comment =also caller 0x0067fbb0
		SizeAddress = 0x0067FD35
		OldSize = 191
		NewSize = 3019
	}
	Hashtable = {
		comment =also caller 0x0067fbb0
		SizeAddress = 0x0067FE5F
		OldSize = 191
		NewSize = 2021
	}
	Hashtable = {
		comment =caller 0x006C56B0
		SizeAddress = 0x006C5674
		OldSize = 37
		NewSize = 299
	}
	Hashtable = {
		comment =caller 0x00714788
		SizeAddress = 0x00714752
		OldSize = 59
		NewSize = 239
	}
	Hashtable = {
		comment =many callers: 0x00769C3D, 0x00769CAD, 0x00769D03, 0x00769D53, 0x00769DA1
		SizeAddress = 0x00769BEB
		OldSize = 37
		NewSize = 297
	}
	Hashtable = {
		comment =multipart 1/2 - caller 0x009dbf36
		SizeAddress = 0x009DBF03
		OldSize = 131213
		NewSize = 905671
	}
	Hashtable = {
		comment =multipart 2/2 - caller 0x009dbf36
		SizeAddress = 0x00B06140
		OldSize = 131213
		NewSize = 905671
	}
	Hashtable = {
		comment =caller 0x009e2726
		SizeAddress = 0x009E26F3
		OldSize = 37
		NewSize = 297
	}
	Hashtable = {
		comment =caller 0x00a10de6
		SizeAddress = 0x00A10DB3
		OldSize = 37
		NewSize = 297
	}
}
